배열 : 같은 자료형의 변수을 하나의 묶음으로 다루는 것 
	묶어진 변수들을 하나의 배열명으로 불리고 
	index로 구분이 가능함



배열 초기화 
인덱스 초기화 int[] arr = new int[3];
for문을 이용한 초기화   
for( int i= 0 ; i < arr.length ; i++){
arrr[i]= i }
선언과 동시에 초기화 
int [] arr = {1,2,3,4,5}


.charAt(index) : char자료형으로 인덱스 요소를 하나씩 가져옴
Arrays.toString(배열명) : 요소값 
Arrays.sort0(배열명): 요소값을 오름차순 정렬
String.length : 문자열의 길이 

stack 메모리 : 메소드 안에 생성한 변수가 기록 되는 공간 
heep 에 저장된 값은 비었을 수 없음 컴파일러 의해 JVM의 기본 값이 저장 됨 
	boolean = false / 나머지 = 0 / 참조형 = null


얕은 복사 
: 주소값을 복사하여 다른 두 변수가 하나의 배열을 참조하는 것

깊은 복사 
: 같은 자료형의 새로운 배열을 만들어서 기존데이터를 모두 가져 오는 것 

for(int i = 0 ; i < arr.length ; i++){
copyArr[i] = arr[i]}

System.arraycopy( 원본배열명 , 원본배열의 시작 값, 복사할 배열명, 복사할 배열의 시작값, 복사할 길이)

int[]copyArr = Arrays.copyOf (원본 배열명, 길이) 


형변환
컴퓨터는 같은 자료형 끼리만 연산이 가능한데
다른 자료형으로 바꾸고 싶을 때 형변환를 이용해 사용이 가능 

자동형 변환 - 값의 크기가 같은 자료형 에서 큰 자료형으로 컴파일러에 의해 자동으로 변환 되는 것
	byte(1byte) - short(2byte)- int(4byte)- long(8byte) - float(4byte) - double(8yete)
			char(2byte)

강제형 변환 - 값의 크기가 큰 자료형를 작은 자료형으로 바꾸고 싶을 때 사용 
	출력 자료형을 바꾸고 싶을 때도 사용 가능     

int -> char //double -> int로 자주 사용 실수에서 정수로 변환 시 소주점 단위 삭제



변수 : 메모리 (Ram)에 값을 저장하는 값 
	저장된 값이 변할 수 있음

변수의 장점 
1. 가독성 증가 / 2. 코드길이 감소 / 3. 재사용성의 증가 / 유지보수성의 증가 

변수 명명의 규칙 
1. 대소 문자 길이에 제한이 없음  /2.  특수문자 $ _ 만 사용 가능 /3. 예약어 사용 불가 /4. 여러 단어 사용시 단어 첫글자 대문자 단 변수 첫 시작 글자는 소문자가 관례 
5. 숫자로 시작하면 안된다
 
상수 : 선언한 값이 바뀌지 않음. //변수명은 대문자 사용
final
Math.random() - 난수 생성 
0.0 <=  x  < 1.0
0.0 <=  x *3  < 3.0
1.0 <=  x *3 +1 < 4.0
1 <=  (int ) (x *3 +1 )< 4

비교 연산자는 기본 자료형 끼리만 사용이 가능 
Sring은 기본 자료형이 아닌 참조형이라서 
문자 .equals(문자열2)


* 2차원 배열 : 1차원 배열을 묶음으로 다루는 변수

int [][] arr;		
(선언) int [][] 을 참조하는 참조형 변수 arr 생성하고 
arr = new int[2][3];		
(할당) heep 영역에  2차원 배열 2행 3열 공간을 할당 한다  


* 1차원 배열 : 자료형이 같은 변수을 묶음으로 다루는 변수 

int [] arr;			
(선언) int [] 을 참조하는 참조변수 arr을 생성하고 
arr = new int[4];		
(할당) heep영역에 int 배열 4칸짜리를 생성 후 arr 대입 


* 행과 열의 길이
	arr.length 행의 길이 
	arr[ i ].length 열

* Arrays.deepToString(배열 명)
 	: 참조하고 있는 배열의 데이터가 나오는 부분까지 파고 들어가서 모든 값을 문자열로 반환

* 가변 배열 : 2차원 배열 생성시 마지막 차수 열을 생성하지 않고 나중에 서로 크기가 다른 1차원 배열을 생성 후 참조하는 것
	char[][] arr = new char [4][];

*OOP객체 지향언어 
:현실세계는 각각의 객체로 이루어 져 있고 사간들은 객체간의 상호작용으로 이루어진다.

new연자자를 사용해 메모리에 객체를 생성한다

추상화ㅣ 캡슐화 ㅣ 다향성 ㅣ상속
사용자 정의자료형 

클래스 : 객체의 특성(속성, 기능)에 대한 정의를 한 것
객체의 특성(속성, 기능)에 대한 정의 
객체의 특성과 기능에 대한 정의 
캡슐화와 추상화가 반드시 필요 

캡슐화 데이터의 기능을 하나로 묶어 관리하는 기법 으로 데이터의 직접 접근을 제한함
추상화를 통해서 정리된 속성과 기능을 하나로 묶고,
속성(데이터)의 직접 접근 방지를 하는 것.
이로 인해 부가적으로 정보 은닉 효과가 발생함
private
getter setter

추상화 공통적인 속성과 기능만 추출하여 정의한것 불필요한 것들은 제거

클래스 객체의 기능과 속성을 정의한 것 
vo - 값 저장용 객체을 모아두는 패키지 
service - 특정 기능을 제공하는 클래스 
